Parameters:
  name:         TrackerChainA
  comment:      "Top level  tracker chain"
  nEvents:      $nevents
  nEventsMax:   400
  nRepeat:      $nrepeat
  RunMC:        6
  RunRaw:       329
  OutDir:       . 
  nFilesPerJob: 1
  macro:        Fun4All_G4_sPHENIX_jobA.C
  memory:       2048
  cpuTimePerEvent: 75000
  runNumber: 329

Resources:
  - file: ../MDC2/shrek/rawdata/jobA/rundir/Fun4All_G4_sPHENIX_jobA.C

InputDataSets:
  - name: TrackerChain0/outDS
    comment: Tracker chain pass 0 
    nFilesPerJob: 1

OutputDataSets:
  - name: TrackerChainA/outDS
    filelist:
      - "regex|DST_JOBA*"

JobCommands: |-

  # Initialize environment... using the "build" environment, unless it
  # was not specified
  if [ -z ${build+x} ]; then 
     echo "build is unset [default to pro]"
     source /opt/sphenix/core/bin/sphenix_setup.sh -n pro
  else 
     echo "build is set to ${build}"
     source /opt/sphenix/core/bin/sphenix_setup.sh -n ${build}
  fi  

  echo ..........................................................................
  echo Running ${name} ${runNumber} ${uniqueId} $@
  echo ..........................................................................

  echo IN1=${IN1}
  echo ls -la ${IN1} 
  ls -la ${IN1} 
  echo readlink -f ${IN1}
  readlink -f ${IN1}
  echo readlink -e ${IN1}
  readlink -e ${IN1}

  # Range (first and last event to process)
  range=( `awk '/RANGE/{ print $2 " " $3 }' $IN1` )

  arg1=${nEvents}   # number of evens to process from MC file
  arg2=${IN1}       # single input file expected
  arg3=`echo ${IN1} | awk '{ gsub("DST_TRKR_CLUSTER","DST_JOBA",$1); print $1 }'`  # in DST_TRKR_CLUSTER / out DST_JOBA
  arg4=./
  
  echo arg1 \(events\) : $arg1
  echo arg2 \(trkr cluster file\): $arg2
  echo arg3 \(output file\): $arg3
  echo arg4 \(output dir\): $arg4

  if [ -z ${nrepeat+x} ]; then
     echo nRepeat=$nRepeat
  else
     nRepeat=${nrepeat}
  fi

  for iter in $( seq 1 1 ${nRepeat} )
  do      
     echo ...............................
     echo Running fun4all iteration $iter
     echo ...............................   
     root -q -b  ${macro}\($arg1,0,\"$arg2\",\"$arg3\",\"$arg4\"\)
  done

  addmetadata ${arg3}_md5sum `md5sum $arg3`
  stash_job_log




