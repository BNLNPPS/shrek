Parameters:
  name:         EventCombine
  comment:      "Top level calorimeter chain"
  nEvents:      $nevents
  nEventsMax:   400
  nRepeat:      $nrepeat
  RunMC:        6
  RunRaw:       329
  OutDir:       /sphenix/lustre01/sphnxpro/scratch
  pfnList:      filelist
  nFilesPerJob: 12
  macro:        Fun4All_Combiner.C
  memory:       2048
  cpuTimePerEvent: 75000

Resources:
  - file: ../macros/eventcombine/Fun4All_Combiner.C

OutputDataSets:
  - name: EventCombine/outDS
    filelist:
      - "regex|beam_emcal*"

JobCommands: |-
  # Initialize environment... using the "build" environment, unless it
  # was not specified
  if [ -z ${build+x} ]; then 
     echo "build is unset [default to latest]"
     source /opt/sphenix/core/bin/sphenix_setup.sh -n 
  else 
     echo "build is set to ${build}"
     source /opt/sphenix/core/bin/sphenix_setup.sh -n ${build}
  fi  

  echo ..........................................................................
  echo Running ${name} ${runNumber} $@
  echo ..........................................................................

  # Input is a pfnlist... but really, we ignore it.  The sebXX.list files should be
  # packed and ready to go...

  # Make sure we keep each run in its own scratch space on lustre
  target=${OutDir}/${runNumber}
  mkdir ${target}

  # Run fun4all
  root -q -b ${macro}\(${nEvents},\"seb00.list\",\"seb01.list\",\"seb02.list\",\"seb03.list\",\"seb04.list\",\"seb05.list\",\"seb06.list\",\"seb07.list\",\"hcaleast.list\",\"hcalwest.list\",\"zdc.list\",\"mbd.list\",\"${target}\"\)

  # Link back all of the output files so that PanDA can find them / and handle
  # the transfer to rucio
  ln -s ${target}/*.prdf .

  # appends the panda task ID to the matching files so that we don't run
  # into namespace issues
  echo ls before append .......
  append_task_id "*.prdf" .prdf
  echo ls after append .......
  
#  stash_job_log




